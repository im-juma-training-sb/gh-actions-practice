name: pylint-pipeline

  on: 
    [push]
    [pull-request]
    -branch
      [main]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    environment: [${{ build.matrix.enriros }}]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint $(git ls-files '*.py')
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.3
      with:
        path: "${{ python-version }}
            
  test:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
    environment: [${{ build.matrix.enriros }}]
    steps:
    - uses: actions/checkout@v4

    - name: Download a Build Artifact
      uses: actions/download-artifact@v4.1.7
      with:
        path: "${{ python-version }}
        
    - name: Run pytest
  # You may pin to the exact commit or the version.
  # uses: pavelzw/pytest-action@c9e5b9c8d93290ff47dcf6a28c6b19ca0b42e487
      uses: pavelzw/pytest-action@v2.1.0
  deploy:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]
        enviros: ["dev","test","prod"]  
    - name: get-artifact
      uses: actions/download-artifact@v4.1.7
      with:
        path: "${{ python-version }}      
      
     - name: deploy-to-env
       uses: ./myaction/deploy
       with:
         token: ${{ GITHUB_TOKEN }}
         environment: ${{ deploy.matrix.enviros }}
